"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[729],{4351:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"module-1/saving-dashboard-state","title":"Saving Dashboard State and Filters","description":"\ud83c\udfaf Goal","source":"@site/docs/module-1/3-saving-dashboard-state.md","sourceDirName":"module-1","slug":"/module-1/saving-dashboard-state","permalink":"/simple-looker-extension-elevate-25/docs/module-1/saving-dashboard-state","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Embedding a Dashboard","permalink":"/simple-looker-extension-elevate-25/docs/module-1/embedding-dashboard"},"next":{"title":"Glossary","permalink":"/simple-looker-extension-elevate-25/docs/module-1/glossary"}}');var o=t(4848),a=t(8453);const r={},l="Saving Dashboard State and Filters",i={},d=[{value:"\ud83c\udfaf Goal",id:"-goal",level:2},{value:"\ud83d\udee0\ufe0f Instructions",id:"\ufe0f-instructions",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"saving-dashboard-state-and-filters",children:"Saving Dashboard State and Filters"})}),"\n",(0,o.jsx)(n.h2,{id:"-goal",children:"\ud83c\udfaf Goal"}),"\n",(0,o.jsx)(n.p,{children:"In this step, you'll extend your extension's functionality by saving the embedded dashboard instance and capturing user-applied filter state. You'll store both in React Context so that other components (like the Sidebar) can access and respond to changes in real time."}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-instructions",children:"\ud83d\udee0\ufe0f Instructions"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["in ",(0,o.jsx)(n.code,{children:"AppContext.tsx"}),", add the following state variables with the AppContext React component:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const [dashboard, setDashboard] = useState<ILookerConnection>();\nconst [global_filters, setGlobalFilters] = useState<Record<string, string>>(\n    {}\n  );\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Make sure to import your types: at the type"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:'import { useState } from "react";'})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:'import { ILookerConnection } from "@looker/embed-sdk";'})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["We're using typescript so developers have great documentation and type checking, so we need to adjust the ",(0,o.jsx)(n.code,{children:"AppContextType"})," type to include the new state variables by adding dashboard and global_filters. You can replace the whole type with the following:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"interface AppContextType {\nisLoading: boolean;\nme: IUser | undefined;\ndashboard: ILookerConnection | undefined;\nsetDashboard: React.Dispatch<React.SetStateAction<ILookerConnection | undefined>>;\nglobal_filters: GlobalFilters;\nsetGlobalFilters: React.Dispatch<React.SetStateAction<GlobalFilters>>;\n}\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Update the full return of ",(0,o.jsx)(n.code,{children:"AppContext.Provider"})," to include the new state variables:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"return (\n  <AppContext.Provider value={{\n    isLoading,\n    me,\n    dashboard,\n    setDashboard,\n    global_filters,\n    setGlobalFilters,\n  }}>\n    {children}\n  </AppContext.Provider>\n);\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Navigate to the ",(0,o.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:t(7381).A+"",children:"Dashboard.tsx"})," file."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Within the Dashboard component at the top, include the useAppContext hook within the Dashboard component and make sure to import using ",(0,o.jsx)(n.code,{children:'import { useAppContext } from "./AppContext";'})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const Dashboard: React.FC = () => {\n  const { dashboard, setGlobalFilters, setDashboard } = useAppContext();\n  // ... rest of the code\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Update the ",(0,o.jsx)(n.code,{children:"embed_sdk"})," variable within the dashboard callback by adding .on() to capture the url from the ",(0,o.jsx)(n.code,{children:"page:changed"})," event."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'embed_sdk\n.createDashboardWithId("thelook::business_pulse")\n.appendTo(el)\n.on("page:changed", (event: any) => {\n    if (event?.page?.absoluteUrl?.length) {\n        const record = urlToRecord(event.page.absoluteUrl);\n        setGlobalFilters((previous_filter) => {\n            return { ...previous_filter, ...record };\n        });\n    }\n})\n// ... rest of the code\n'})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Navigate to the ",(0,o.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:t(8993).A+"",children:"Sidebar.tsx"})," file."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Reference the ",(0,o.jsx)(n.code,{children:"global_filters"})," from the ",(0,o.jsx)(n.code,{children:"useAppContext"})," and update the code block to include the ",(0,o.jsx)(n.code,{children:"global_filters"})," state variable."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'const Sidebar: React.FC = () => {\n    const { global_filters } = useAppContext();\n    return (\n        // ... sidebar components\n        <CodeBlock fontSize="xxsmall">{JSON.stringify(global_filters, null, 2)}</CodeBlock>\n    )\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:"Learn more:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/simple-looker-extension-elevate-25/docs/module-1/glossary#interfaces-and-types-in-typescript",children:"\ud83d\udcd8 Interfaces and Types in TypeScript"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/simple-looker-extension-elevate-25/docs/module-1/glossary#reacts-context-api",children:"\ud83d\udcd8 React's Context API"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/simple-looker-extension-elevate-25/docs/module-1/glossary#reacts-usestate",children:"\ud83d\udcd8 React's useState"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},7381:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/files/Dashboard-4ff83c61d663d3e3494c2daf2b57ffe4.tsx"},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(6540);const o={},a=s.createContext(o);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(a.Provider,{value:n},e.children)}},8993:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/files/Sidebar-f4dc3ea57e987cfc4efda5ffc950d5a0.tsx"}}]);