"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[318],{5734:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"module-1/project-setup","title":"Project Setup & Entitlements","description":"\ud83c\udfaf Goal","source":"@site/docs/module-1/1-project-setup.md","sourceDirName":"module-1","slug":"/module-1/project-setup","permalink":"/simple-looker-extension-elevate-25/docs/module-1/project-setup","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Module 1: Getting Started with Extensions & React","permalink":"/simple-looker-extension-elevate-25/docs/module-1/overview"},"next":{"title":"Embedding a Dashboard","permalink":"/simple-looker-extension-elevate-25/docs/module-1/embedding-dashboard"}}');var o=t(4848),s=t(8453);const l={},r="Project Setup & Entitlements",c={},d=[{value:"\ud83c\udfaf Goal",id:"-goal",level:2},{value:"\ud83d\udee0\ufe0f Instructions",id:"\ufe0f-instructions",level:2},{value:"Git Checkout",id:"git-checkout",level:3},{value:"Application Manifest File",id:"application-manifest-file",level:3},{value:"Enabling Entitlements",id:"enabling-entitlements",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"project-setup--entitlements",children:"Project Setup & Entitlements"})}),"\n",(0,o.jsx)(n.h2,{id:"-goal",children:"\ud83c\udfaf Goal"}),"\n",(0,o.jsxs)(n.p,{children:["In this step, you\u2019ll prepare your development environment and configure your Looker project to support embedded extensions. This includes checking out the correct Git branch, setting up the ",(0,o.jsx)(n.code,{children:"manifest.lkml"})," file, and enabling the required entitlements for dashboard embedding."]}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-instructions",children:"\ud83d\udee0\ufe0f Instructions"}),"\n",(0,o.jsx)(n.h3,{id:"git-checkout",children:"Git Checkout"}),"\n",(0,o.jsxs)(n.p,{children:["To get started working on Module 1 you can run the following in the terminal of the cloud shell. ",(0,o.jsx)(n.strong,{children:"NOTE"})," You may need to create a new terminal if you have the tunnel running and npm run dev running in two other terminals."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"git checkout module1-start --force\n"})}),"\n",(0,o.jsx)(n.p,{children:"To jump to the end of this module in case you run out of time or you want to see if you've done everything correctly, run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"git checkout module1-end --force\n"})}),"\n",(0,o.jsx)(n.h3,{id:"application-manifest-file",children:"Application Manifest File"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.strong,{children:"LookML project manifest"})," is a special configuration file (typically named ",(0,o.jsx)(n.code,{children:"manifest.lkml"}),") that defines project-wide settings, dependencies, and applications (extensions) for your Looker project."]}),"\n",(0,o.jsxs)(n.p,{children:["To add an extension or application to Looker, use the ",(0,o.jsx)(n.code,{children:"application"})," parameter in your ",(0,o.jsx)(n.code,{children:"manifest.lkml"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lkml",children:'application: simple_extension {\n  label: "Simple Extension"\n  url: "<cloudflare-url>/bundle.js"\n}\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Use the ",(0,o.jsx)(n.code,{children:"url"})," property for development (points to your local dev server)"]}),"\n",(0,o.jsxs)(n.li,{children:["Use the ",(0,o.jsx)(n.code,{children:"file"})," property for production (points to a static JS file in your project)"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"enabling-entitlements",children:"Enabling Entitlements"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Entitlements"})," are permissions that specify what capabilities your Looker extension or application is allowed to use. In order for your extension to be able to embed a dashboard, you need to add the ",(0,o.jsx)(n.code,{children:"use_iframes"})," and ",(0,o.jsx)(n.code,{children:"use_embeds"})," entitlements to your manifest.lkml file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lkml",children:'application: simple_extension {\n  label: "Simple Extension"\n  url: "<serveo-url>/bundle.js"\n  entitlements: {\n    core_api_methods: ["me"]\n    use_embeds: yes\n    use_iframes: yes\n  }\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["\u2b50 ",(0,o.jsx)(n.strong,{children:"Best Practices"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Granting only the entitlements your extension needs"})," for its functionality."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Reviewing and updating entitlements"})," as your extension evolves."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Testing your extension"})," in both development (",(0,o.jsx)(n.code,{children:"url"}),") and production (",(0,o.jsx)(n.code,{children:"file"}),") modes to ensure entitlements are set correctly."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:"Learn more:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/simple-looker-extension-elevate-25/docs/module-1/glossary#looker-project-manifest",children:"\ud83d\udcd8 LookML Project Manifest"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/simple-looker-extension-elevate-25/docs/module-1/glossary#entitlements",children:"\ud83d\udcd8 Entitlements"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var i=t(6540);const o={},s=i.createContext(o);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);